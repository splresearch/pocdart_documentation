name: Reusable Pylint Check

on:
  workflow_call:

# Step 1: Spin up a container with Python 3.7 to doing the checking in
# Step 2: Install dependencies needed
# Step 3: Gather changed files in PR and run them through pylint
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full git history

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint requests pytest mysql-connector-python jinja2 phonenumbers

      - name: Analyse changed code with pylint
        run: |
          git fetch origin main
          changed_files=$(git diff --name-only origin/main...HEAD -- '*.py' || true)
          echo "Changed files: $changed_files"
          
          existing_files=""
          for file in $changed_files; do
            if [ -f "$file" ]; then
              existing_files="$existing_files $file"
            fi
          done
          echo "Existing Python files: $existing_files"

          if [ -z "$existing_files" ]; then
            echo "No Python files exist to lint. Skipping pylint."
            exit 0
          fi

          pylint --fail-under=8 $existing_files