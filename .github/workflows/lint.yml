name: Pylint Check

on:
  pull_request:
    branches:
      - main

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ vars.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint requests

    - name: Get list of changed Python files
      id: get_changed_files
      run: |
        git fetch origin main
        CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRTUXB origin/main | grep -E ".py$" || echo "")
        echo "Changed files: $CHANGED_FILES"
        echo "::set-output name=files::$CHANGED_FILES"

    - name: Run Pylint on changed files
      if: steps.get_changed_files.outputs.files != ''
      env:
        PYTHONPATH: ${{ github.workspace }}:${{ github.workspace }}/scrum/tools
      run: |
        echo "Running Pylint..."
        CHANGED_FILES="${{ steps.get_changed_files.outputs.files }}"
        echo "Changed files: $CHANGED_FILES"

        # Initialize an empty variable to hold the files to lint
        FILES_TO_LINT=""
        for file in $CHANGED_FILES; do
          # Check if the file exists
          if [ -f "${{ github.workspace }}/$file" ]; then
            FILES_TO_LINT="$FILES_TO_LINT $file"
          fi
        done

        echo "Files to lint: $FILES_TO_LINT"
        if [ -z "$FILES_TO_LINT" ]; then
          echo "No Python files to lint."
          exit 0
        fi

        # Run pylint with the specified .pylintrc
        # Change directory to the root of the repository
        cd "${{ github.workspace }}/scrum/tools"
        pylint --rcfile=.pylintrc --fail-under=8 $FILES_TO_LINT